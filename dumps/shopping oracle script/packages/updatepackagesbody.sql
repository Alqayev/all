CREATE OR REPLACE PACKAGE BODY C##BIGDATA.UPDATEPACKAGE
AS
PROCEDURE UPDATECUSTOMERACTIVE (ACTV IN RECEIVENT.ACTIVE%TYPE,PRM_ID IN RECEIVENT.ORDERS_ID%TYPE)
IS 
BEGIN 
UPDATE RECEIVENT SET ACTIVE=ACTV WHERE ID=PRM_ID;
EXCEPTION
   WHEN OTHERS
   THEN
      DBMS_OUTPUT.put_line ('<UPDATEPRODUCTLIST message>' || SQLERRM);
END UPDATECUSTOMERACTIVE;
PROCEDURE UPDATEPRODUCTPICTURELIST(PIC IN PRODUCTS_ON_SALE.PICTURE%TYPE,BYID IN PRODUCTS_ON_SALE.ID%TYPE)
IS
BEGIN
UPDATE PRODUCTS_ON_SALE SET PICTURE=PIC WHERE ID=BYID;
EXCEPTION
   WHEN OTHERS
   THEN
      DBMS_OUTPUT.put_line ('<UPDATEPRODUCTPICTURELIST message>' || SQLERRM);
END UPDATEPRODUCTPICTURELIST;
PROCEDURE  UPDATEPRODUCTLIST ( NAMES IN PRODUCTS_ON_SALE.NAME%TYPE,PRICES IN PRODUCTS_ON_SALE.PRICE%TYPE,
BONUCE_VAL IN PRODUCTS_ON_SALE.BONUCE_VALUE%TYPE,IMPDATE IN PRODUCTS_ON_SALE.IMPORTED_DATE%TYPE,
ACTV IN PRODUCTS_ON_SALE.ACTIVE%TYPE,BYID IN PRODUCTS_ON_SALE.ID%TYPE,CATEG IN PRODUCTS_ON_SALE.CATEGORY%TYPE )
IS 
BEGIN 
UPDATE PRODUCTS_ON_SALE SET NAME=NAMES,PRICE=PRICES,BONUCE_VALUE=BONUCE_VAL,IMPORTED_DATE=TO_DATE(IMPDATE),ACTIVE=ACTV,CATEGORY=CATEG WHERE ID=BYID;
EXCEPTION
   WHEN OTHERS
   THEN
      DBMS_OUTPUT.put_line ('<UPDATEPRODUCTLIST message>' || SQLERRM);
END UPDATEPRODUCTLIST;
 PROCEDURE UPDATEBONUCENAMELIST(NAM IN BONUS_TABLE.BONUCE_NAME%TYPE,BON_QUONTITY IN BONUS_TABLE.BONUCE_QUONTITY%TYPE,
OPN_BON_DATE IN BONUS_TABLE.OPEN_BONUCE_DATE%TYPE,ACTV IN BONUS_TABLE.ACTIVE%TYPE, PRIM_ID IN BONUS_TABLE.PRIMARY_ID%TYPE)
IS 
BEGIN
UPDATE BONUS_TABLE SET BONUCE_NAME=NAM,BONUCE_QUONTITY=BON_QUONTITY,OPEN_BONUCE_DATE=OPN_BON_DATE,ACTIVE=ACTV WHERE PRIMARY_ID=PRIM_ID;
EXCEPTION
   WHEN OTHERS
   THEN
      DBMS_OUTPUT.put_line ('<UPDATEPRODUCTLIST message>' || SQLERRM);
END UPDATEBONUCENAMELIST;
 PROCEDURE UPDATEBONUCELIST(
LOGN_DATE IN LOGIN_TABLE_PRIMARY.LOGIN_DATE%TYPE,TASKS IN 
LOGIN_TABLE_PRIMARY.TASK%TYPE,ACTIV IN LOGIN_TABLE_PRIMARY.ACTIVE%TYPE,
BYID IN LOGIN_TABLE_PRIMARY.ID%TYPE)
IS
BEGIN
UPDATE LOGIN_TABLE_PRIMARY SET LOGIN_DATE=TO_DATE(LOGN_DATE),TASK=TASKS,ACTIVE=ACTIV WHERE ID=BYID;
EXCEPTION
   WHEN OTHERS
   THEN
      DBMS_OUTPUT.put_line ('<UPDATEBONUCELIST message>' || SQLERRM); 
END UPDATEBONUCELIST;

PROCEDURE UPDATEOLDEMAILACTIVE(BYID IN LOGIN_TABLE_PRIMARY.ID%TYPE)
IS 
BEGIN
UPDATE LOGIN_TABLE_PRIMARY SET OLD_USER_ACTIVE=0 WHERE ID=BYID;
EXCEPTION
WHEN OTHERS
THEN
DBMS_OUTPUT.put_line ('<UPDATEOLDEMAILACTIVE message>' || SQLERRM);
END UPDATEOLDEMAILACTIVE;
PROCEDURE UPDATEOLDTWOMONTHEMAILACTIVE ( BYID IN LOGIN_TABLE_PRIMARY.ID%TYPE )
IS 
BEGIN
UPDATE LOGIN_TABLE_PRIMARY SET OLD_USER_ACTIVE=1 WHERE ID=BYID;
EXCEPTION
WHEN OTHERS
THEN
DBMS_OUTPUT.put_line ('<UPDATEOLDTWOMONTHEMAILACTIVE message>' || SQLERRM);
END UPDATEOLDTWOMONTHEMAILACTIVE;
END UPDATEPACKAGE;
/
