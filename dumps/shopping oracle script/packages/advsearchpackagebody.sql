CREATE OR REPLACE PACKAGE BODY C##BIGDATA.ADVSEARCHPACKAGE
IS
FUNCTION CUSTOMERADVSEARCH (BEGIN_DATE IN LOGIN_TABLE_PRIMARY.LOGIN_DATE%TYPE,
END_DATE IN LOGIN_TABLE_PRIMARY.LOGIN_DATE%TYPE,ADV_NAME IN LOGIN_TABLE_PRIMARY.NAME%TYPE,ADV_SURNAME IN LOGIN_TABLE_PRIMARY.SURNAME%TYPE,
EMAILS IN LOGIN_TABLE_PRIMARY.EMAIL%TYPE,TASKS IN LOGIN_TABLE_PRIMARY.TASK%TYPE,ACTV IN LOGIN_TABLE_PRIMARY.ACTIVE%TYPE)
RETURN SYS_REFCURSOR
IS 
CUSTOMER SYS_REFCURSOR;
BEGIN

OPEN CUSTOMER FOR
SELECT ID,NAME,SURNAME,EMAIL,LOGIN_DATE,TASK,ACTIVE FROM LOGIN_TABLE_PRIMARY
WHERE
LOGIN_DATE>=NVL(BEGIN_DATE,TO_DATE('01/01/0001', 'dd/mm/yyyy')) 
AND LOGIN_DATE<=NVL(END_DATE,TO_DATE('31/12/9999', 'dd/mm/yyyy'))
AND UPPER(NAME) LIKE UPPER('%'||ADV_NAME||'%') AND UPPER(SURNAME) LIKE UPPER('%'||ADV_SURNAME||'%') AND UPPER(EMAIL) LIKE UPPER(('%'||EMAILS||'%'))
AND TASK=NVL(TASKS,'USER') AND ACTIVE=DECODE(ACTV,1,1,0,0,2,1);

RETURN CUSTOMER;
END CUSTOMERADVSEARCH;



FUNCTION ORDEREDADVSEARCH (BEGIN_ORDERED_DATE IN PRIMARY_TABLE.ORDER_DATE%TYPE,END_ORDERED_DATE IN PRIMARY_TABLE.ORDER_DATE%TYPE,
BEGIN_DELIVERY_DATE IN PRIMARY_TABLE.LAST_DATE_OF_DELIVERY%TYPE,END_DELIVERY_DATE IN PRIMARY_TABLE.LAST_DATE_OF_DELIVERY%TYPE,
ODR_NAME IN LOGIN_TABLE_PRIMARY.NAME%TYPE,ODR_SURNAME IN LOGIN_TABLE_PRIMARY.SURNAME%TYPE,ODR_EMAIL IN LOGIN_TABLE_PRIMARY.EMAIL%TYPE,
ODR_ADDRESS IN PRIMARY_TABLE.ADDRESS%TYPE,ODR_MOB IN PRIMARY_TABLE.MOBILE%TYPE,ODR_MOB2 IN PRIMARY_TABLE.MOBILE2%TYPE,
PR_NAME IN PRODUCTS_ON_SALE.NAME%TYPE,OD_COUNTMIN IN RECEIVENT.ORDER_COUNT%TYPE,OD_COUNTMAX IN RECEIVENT.ORDER_COUNT%TYPE,
ACTV  IN LOGIN_TABLE_PRIMARY.ACTIVE%TYPE)
RETURN SYS_REFCURSOR
IS
ADV_ORDERD SYS_REFCURSOR;
OD_CNTMAX RECEIVENT.ORDER_COUNT%TYPE;

--
BEGIN
OD_CNTMAX:=OD_COUNTMAX;
IF(OD_COUNTMAX<=0) THEN
OD_CNTMAX:=999*10000;
END IF;

OPEN ADV_ORDERD FOR
 SELECT RC.ID CH_ID,LTP.ID LTP_ID,LTP.NAME LTP_NAME,LTP.SURNAME LTP_SURNAME,LTP.EMAIL LTP_EMAIL,PT.ADDRESS PT_ADDRESS,PT.ORDER_DATE PT_DATE
  ,PT.LAST_DATE_OF_DELIVERY PT_DELDATE,PT.MOBILE PT_MOBILE,PT.MOBILE2 PT_MOBILE2,POS.NAME POS_NAME,RC.ORDER_COUNT RC_COUNT,RC.ACTIVE RC_ACTIVE
   FROM RECEIVENT RC 
  INNER JOIN LOGIN_TABLE_PRIMARY LTP ON RC.ORDERS_ID=LTP.ID
  INNER JOIN PRIMARY_TABLE PT ON PT.PRIMARY_ID=RC.ORDERS_ID
  INNER JOIN PRODUCTS_ON_SALE POS ON RC.PRODUCT_ID=POS.ID WHERE  PT.ORDER_DATE>=NVL(TO_DATE(BEGIN_ORDERED_DATE),TO_DATE('01/01/0001', 'dd/mm/yyyy'))
AND 
PT.ORDER_DATE<=NVL(TO_DATE(END_ORDERED_DATE),TO_DATE('31/12/9999', 'dd/mm/yyyy'))
AND PT.LAST_DATE_OF_DELIVERY>=NVL(TO_DATE(BEGIN_DELIVERY_DATE),TO_DATE('01/01/0001', 'dd/mm/yyyy')) AND
PT.LAST_DATE_OF_DELIVERY<=NVL(TO_DATE(END_DELIVERY_DATE),TO_DATE('31/12/9999', 'dd/mm/yyyy')) 
AND UPPER(LTP.NAME) LIKE UPPER(('%'||ODR_NAME||'%'))
AND UPPER(LTP.SURNAME) LIKE UPPER(('%'||ODR_SURNAME||'%')) AND UPPER(LTP.EMAIL) LIKE UPPER(('%'||ODR_EMAIL||'%'))
AND 
UPPER(PT.ADDRESS) LIKE UPPER(('%'||ODR_ADDRESS||'%')) AND PT.MOBILE LIKE ('%'||TRIM(ODR_MOB)||'%') AND PT.MOBILE2 LIKE ('%'||TRIM(ODR_MOB2)||'%')
AND  RC.ORDER_COUNT >=OD_COUNTMIN AND RC.ORDER_COUNT<=OD_CNTMAX  AND 
RC.ACTIVE=DECODE(ACTV,1,1,0,0,2,1) AND UPPER(POS.NAME) LIKE UPPER(('%'||PR_NAME ||'%'));
RETURN ADV_ORDERD;
END ORDEREDADVSEARCH;

FUNCTION PRODUCTADV (PRD_NAME IN PRODUCTS_ON_SALE.NAME%TYPE,PRD_BEGIN_DATE IN PRODUCTS_ON_SALE.IMPORTED_DATE%TYPE,
PRD_END_DATE IN PRODUCTS_ON_SALE.IMPORTED_DATE%TYPE,PRD_PRICE_MIN IN PRODUCTS_ON_SALE.PRICE%TYPE,
PRD_PRICE_MAX IN PRODUCTS_ON_SALE.PRICE%TYPE,PRO_BONMIN_VAL IN PRODUCTS_ON_SALE.BONUCE_VALUE%TYPE,
PRO_BONMAX_VAL IN PRODUCTS_ON_SALE.BONUCE_VALUE%TYPE,PRO_ACTIVE IN PRODUCTS_ON_SALE.ACTIVE%TYPE) 
RETURN SYS_REFCURSOR
IS
PRODUCT SYS_REFCURSOR;
P_PRICE PRODUCTS_ON_SALE.PRICE%TYPE;
P_BONUC PRODUCTS_ON_SALE.BONUCE_VALUE%TYPE;
BEGIN
P_PRICE:=PRD_PRICE_MAX;
P_BONUC:=PRO_BONMAX_VAL;
IF (PRD_PRICE_MAX<=0) THEN
P_PRICE:=9999*10000;
END IF;
IF (PRO_BONMAX_VAL<=0) THEN
P_BONUC:=9999*10000;
END IF;
OPEN PRODUCT FOR
SELECT P.ID,P.NAME,P.PICTURE,P.PRICE,P.BONUCE_VALUE,P.IMPORTED_DATE,P.ACTIVE FROM PRODUCTS_ON_SALE P WHERE UPPER(P.NAME) LIKE UPPER(('%'||PRD_NAME||'%'))
AND P.IMPORTED_DATE>=NVL(TO_DATE(PRD_BEGIN_DATE),TO_DATE('01/01/0001', 'dd/mm/yyyy')) AND  P.IMPORTED_DATE<=NVL(TO_DATE(PRD_END_DATE),TO_DATE('31/12/9999', 'dd/mm/yyyy'))
AND P.PRICE>=PRD_PRICE_MIN AND P.PRICE <=P_PRICE AND P.BONUCE_VALUE>=PRO_BONMIN_VAL AND P.BONUCE_VALUE<=P_BONUC AND P.ACTIVE=DECODE(PRO_ACTIVE,1,1,0,0,2,1);
RETURN PRODUCT;
END PRODUCTADV;

FUNCTION ADVBONUCELIST(B_NAME IN LOGIN_TABLE_PRIMARY.NAME%TYPE,B_SURNAME IN LOGIN_TABLE_PRIMARY.SURNAME%TYPE,
B_EMAIL IN LOGIN_TABLE_PRIMARY.EMAIL%TYPE,BON_NAME IN BONUS_TABLE.BONUCE_NAME%TYPE,B_QUONTITY_MIN IN BONUS_TABLE.BONUCE_QUONTITY%TYPE,
B_QUONTITY_MAX IN BONUS_TABLE.BONUCE_QUONTITY%TYPE,B_OPEN_DATEMIN IN BONUS_TABLE.OPEN_BONUCE_DATE%TYPE,
B_OPEN_DATEMAX IN BONUS_TABLE.OPEN_BONUCE_DATE%TYPE,B_ACTIVE IN BONUS_TABLE.ACTIVE%TYPE) 
RETURN SYS_REFCURSOR
IS 
BONUCE SYS_REFCURSOR;
QUANTITY BONUS_TABLE.BONUCE_QUONTITY%TYPE;
BEGIN
QUANTITY:=B_QUONTITY_MAX;
IF(B_QUONTITY_MAX<=0) THEN
QUANTITY:=9999999999999999999999999999999999999999999999.0;
END IF;
OPEN BONUCE FOR 
SELECT B.PRIMARY_ID,L.NAME,L.SURNAME,L.EMAIL,B.BONUCE_NAME,B.BONUCE_QUONTITY,B.OPEN_BONUCE_DATE,B.ACTIVE FROM LOGIN_TABLE_PRIMARY L
LEFT JOIN BONUS_TABLE B ON L.ID=B.PRIMARY_ID WHERE UPPER(L.NAME) LIKE UPPER(('%'||B_NAME||'%')) AND UPPER(L.SURNAME) LIKE UPPER(('%'||B_SURNAME||'%')) AND
UPPER(L.EMAIL) LIKE UPPER(('%'||B_EMAIL||'%')) AND UPPER(B.BONUCE_NAME) LIKE UPPER(('%'||BON_NAME||'%')) AND B.BONUCE_QUONTITY>=B_QUONTITY_MIN AND
B.BONUCE_QUONTITY<=QUANTITY AND B.OPEN_BONUCE_DATE>=NVL(TO_DATE(B_OPEN_DATEMIN),TO_DATE('01/01/0001', 'dd/mm/yyyy'))
AND B.OPEN_BONUCE_DATE<=NVL(TO_DATE(B_OPEN_DATEMAX),TO_DATE('31/12/9999', 'dd/mm/yyyy')) AND B.ACTIVE=DECODE(B_ACTIVE,1,1,0,0,2,1);
RETURN BONUCE;
END ADVBONUCELIST;

FUNCTION ADVLIBRARY(U_NAME IN PRODUCTS_ON_SALE.NAME%TYPE,U_MINPRIC IN PRODUCTS_ON_SALE.PRICE%TYPE,U_MAXPRIC IN PRODUCTS_ON_SALE.PRICE%TYPE,
U_MINBONVAL IN PRODUCTS_ON_SALE.BONUCE_VALUE%TYPE,U_MAXBONVAL IN PRODUCTS_ON_SALE.BONUCE_VALUE%TYPE,U_CATEGORY IN PRODUCTS_ON_SALE.CATEGORY%TYPE) RETURN SYS_REFCURSOR
IS
U_PRODUCT SYS_REFCURSOR;
B_MAXPRICE PRODUCTS_ON_SALE.PRICE%TYPE;
B_MAXBONVAL PRODUCTS_ON_SALE.BONUCE_VALUE%TYPE;
BEGIN
B_MAXPRICE:=U_MAXPRIC;
IF (B_MAXPRICE=0) THEN
B_MAXPRICE:=99999999999999999999.0;
end if;

B_MAXBONVAL:=U_MAXBONVAL;
IF (B_MAXBONVAL=0) THEN
B_MAXBONVAL:=999999999999999.0;
end if;
IF(U_CATEGORY!=8) THEN
OPEN U_PRODUCT FOR
SELECT PS.ID,PS.NAME,PS.PRICE,PS.BONUCE_VALUE,PS.CATEGORY,PP.PRODUCT_PATH,D.DICT_VALUE FROM PRODUCTS_ON_SALE PS
INNER JOIN PRODUCT_PICTURE PP ON PS.ID=PP.PRODUCT_ID
INNER JOIN DICTIONARY D ON D.ID=PS.CATEGORY WHERE UPPER(PS.NAME) LIKE UPPER(('%'||U_NAME||'%')) AND PS.PRICE>=U_MINPRIC AND PS.PRICE<=B_MAXPRICE 
AND PS.BONUCE_VALUE>=U_MINBONVAL AND PS.BONUCE_VALUE<=B_MAXBONVAL AND PS.CATEGORY=DECODE(U_CATEGORY,7,7,6,6,5,5,4,4,3,3,2,2,1,1);
ELSE 
OPEN U_PRODUCT FOR
SELECT PS.ID,PS.NAME,PS.PRICE,PS.BONUCE_VALUE,PS.CATEGORY,PP.PRODUCT_PATH,D.DICT_VALUE FROM PRODUCTS_ON_SALE PS
INNER JOIN PRODUCT_PICTURE PP ON PS.ID=PP.PRODUCT_ID
INNER JOIN DICTIONARY D ON D.ID=PS.CATEGORY WHERE UPPER(PS.NAME) LIKE UPPER(('%'||U_NAME||'%')) AND PS.PRICE>=U_MINPRIC AND PS.PRICE<=B_MAXPRICE 
AND PS.BONUCE_VALUE>=U_MINBONVAL AND PS.BONUCE_VALUE<=B_MAXBONVAL;
END IF;
-- or
--PS.CATEGORY=DECODE(U_CATEGORY,8,4)or PS.CATEGORY=DECODE(U_CATEGORY,8,6)or PS.CATEGORY=DECODE(U_CATEGORY,8,3)
--or PS.CATEGORY=DECODE(U_CATEGORY,8,2)or PS.CATEGORY=DECODE(U_CATEGORY,8,1)or PS.CATEGORY=DECODE(U_CATEGORY,8,5);

RETURN U_PRODUCT;
END ADVLIBRARY;
END ADVSEARCHPACKAGE;
/
